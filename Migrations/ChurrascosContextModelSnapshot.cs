// <auto-generated />
using System;
using ChurrascosAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChurrascosAPI.Migrations
{
    [DbContext(typeof(ChurrascosContext))]
    partial class ChurrascosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChurrascosAPI.Models.Base.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductoTipo")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.HasIndex("Disponible");

                    b.HasIndex("Nombre");

                    b.ToTable("Producto");

                    b.HasDiscriminator<string>("ProductoTipo").HasValue("Producto");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Inventario.Guarnicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CaloriasPorPorcion")
                        .HasColumnType("int");

                    b.Property<int>("CantidadStock")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<bool>("EsPremium")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PrecioExtra")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("int");

                    b.Property<int>("TiempoPreparacionMinutos")
                        .HasColumnType("int");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Guarniciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CantidadStock = 100,
                            Disponible = true,
                            EsPremium = false,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Frijoles",
                            PrecioExtra = 0m,
                            StockMinimo = 20,
                            TiempoPreparacionMinutos = 5,
                            UnidadMedida = "porción"
                        },
                        new
                        {
                            Id = 2,
                            CantidadStock = 50,
                            Disponible = true,
                            EsPremium = false,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Chile de Árbol",
                            PrecioExtra = 0m,
                            StockMinimo = 10,
                            TiempoPreparacionMinutos = 5,
                            UnidadMedida = "porción"
                        },
                        new
                        {
                            Id = 3,
                            CantidadStock = 30,
                            Disponible = true,
                            EsPremium = false,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Cebollín",
                            PrecioExtra = 0m,
                            StockMinimo = 10,
                            TiempoPreparacionMinutos = 5,
                            UnidadMedida = "porción"
                        },
                        new
                        {
                            Id = 4,
                            CantidadStock = 200,
                            Disponible = true,
                            EsPremium = false,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Tortillas",
                            PrecioExtra = 0m,
                            StockMinimo = 50,
                            TiempoPreparacionMinutos = 5,
                            UnidadMedida = "porción"
                        },
                        new
                        {
                            Id = 5,
                            CantidadStock = 40,
                            Disponible = true,
                            EsPremium = false,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Chirmol",
                            PrecioExtra = 0m,
                            StockMinimo = 15,
                            TiempoPreparacionMinutos = 5,
                            UnidadMedida = "porción"
                        });
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Inventario.GuarnicionChurrasco", b =>
                {
                    b.Property<int>("ChurrascoId")
                        .HasColumnType("int");

                    b.Property<int>("GuarnicionId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("EsExtra")
                        .HasColumnType("bit");

                    b.Property<string>("NotasPreparacion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OrdenPreferencia")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrecioEspecial")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ChurrascoId", "GuarnicionId");

                    b.HasIndex("GuarnicionId");

                    b.ToTable("GuarnicionesChurrasco");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Inventario.InventarioItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("CodigoProveedor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("CostoPromedio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notas")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Proveedor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PuntoReorden")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StockMaximo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StockMinimo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("UbicacionAlmacen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Cantidad");

                    b.HasIndex("Tipo");

                    b.ToTable("Inventario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Cantidad = 50m,
                            CostoPromedio = 20.00m,
                            Nombre = "Carne Puyazo",
                            PrecioUnitario = 25.00m,
                            PuntoReorden = 15m,
                            StockMaximo = 100m,
                            StockMinimo = 10m,
                            Tipo = 0,
                            UltimaActualizacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Unidad = "libras"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Cantidad = 40m,
                            CostoPromedio = 24.00m,
                            Nombre = "Carne Culotte",
                            PrecioUnitario = 30.00m,
                            PuntoReorden = 12m,
                            StockMaximo = 80m,
                            StockMinimo = 8m,
                            Tipo = 0,
                            UltimaActualizacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Unidad = "libras"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Cantidad = 35m,
                            CostoPromedio = 18.00m,
                            Nombre = "Costilla",
                            PrecioUnitario = 22.00m,
                            PuntoReorden = 10m,
                            StockMaximo = 60m,
                            StockMinimo = 5m,
                            Tipo = 0,
                            UltimaActualizacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Unidad = "libras"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Cantidad = 20m,
                            CostoPromedio = 6.00m,
                            Nombre = "Carbón",
                            PrecioUnitario = 8.00m,
                            PuntoReorden = 8m,
                            StockMaximo = 50m,
                            StockMinimo = 5m,
                            Tipo = 4,
                            UltimaActualizacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Unidad = "sacos"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Cantidad = 15m,
                            CostoPromedio = 4.50m,
                            Nombre = "Leña",
                            PrecioUnitario = 6.00m,
                            PuntoReorden = 5m,
                            StockMaximo = 30m,
                            StockMinimo = 3m,
                            Tipo = 4,
                            UltimaActualizacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Unidad = "sacos"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Cantidad = 100m,
                            CostoPromedio = 0.30m,
                            Nombre = "Cajas 6 dulces",
                            PrecioUnitario = 0.50m,
                            PuntoReorden = 30m,
                            StockMaximo = 200m,
                            StockMinimo = 20m,
                            Tipo = 3,
                            UltimaActualizacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Unidad = "unidades"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            Cantidad = 80m,
                            CostoPromedio = 0.50m,
                            Nombre = "Cajas 12 dulces",
                            PrecioUnitario = 0.75m,
                            PuntoReorden = 25m,
                            StockMaximo = 150m,
                            StockMinimo = 15m,
                            Tipo = 3,
                            UltimaActualizacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Unidad = "unidades"
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            Cantidad = 60m,
                            CostoPromedio = 0.70m,
                            Nombre = "Cajas 24 dulces",
                            PrecioUnitario = 1.00m,
                            PuntoReorden = 20m,
                            StockMaximo = 120m,
                            StockMinimo = 10m,
                            Tipo = 3,
                            UltimaActualizacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Unidad = "unidades"
                        });
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Inventario.MovimientoInventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantidadAnterior")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantidadNueva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("InventarioItemId")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ReferenciaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoMovimiento")
                        .HasColumnType("int");

                    b.Property<string>("TipoReferencia")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UsuarioResponsable")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InventarioItemId");

                    b.ToTable("MovimientosInventario");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Ventas.ComboItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CategoriaCombo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComboId")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionEnCombo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("EsObligatorio")
                        .HasColumnType("bit");

                    b.Property<string>("OpcionesPersonalizacion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("OrdenPresentacion")
                        .HasColumnType("int");

                    b.Property<bool>("PermiteAlternativas")
                        .HasColumnType("bit");

                    b.Property<decimal>("PorcentajeDescuentoItem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioOriginal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ComboItems");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Ventas.Sucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<string>("DiasLaborales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gerente")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HorarioApertura")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("HorarioCierre")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<double?>("Latitud")
                        .HasColumnType("float");

                    b.Property<double?>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Ventas.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaRestaurante")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CalificacionServicio")
                        .HasColumnType("int");

                    b.Property<string>("Cocinero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComentariosCliente")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("CostoEnvio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Descuento")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DireccionEntrega")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEstimadaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraFinalizacionPreparacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraInicioPedido")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraInicioPreparacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Impuestos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Mesero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MetodoPago")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NotasEspeciales")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("NumeroMesa")
                        .HasColumnType("int");

                    b.Property<string>("NumeroOrden")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Propina")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Repartidor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Subtotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TelefonoCliente")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TipoVenta")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Estado");

                    b.HasIndex("Fecha");

                    b.HasIndex("NumeroOrden")
                        .IsUnique();

                    b.HasIndex("TipoVenta");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Ventas.VentaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CaloriasCalculadas")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal?>("CostoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EstadoItem")
                        .HasColumnType("int");

                    b.Property<string>("GuarnicionesSeleccionadas")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("HoraFinPreparacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraInicioPreparacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NotasEspeciales")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PorcentajeDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TemperaturaServicio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TerminoCoccionSolicitado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TiempoPreparacionMinutos")
                        .HasColumnType("int");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("VentaId");

                    b.ToTable("VentasItems");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Productos.Churrasco", b =>
                {
                    b.HasBaseType("ChurrascosAPI.Models.Base.Producto");

                    b.Property<int>("CantidadPorciones")
                        .HasColumnType("int");

                    b.Property<string>("NotasEspeciales")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PrecioBase")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TemperaturaRecomendada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TerminoCoccion")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("TiempoPreparacion")
                        .HasColumnType("time");

                    b.Property<int>("TipoCarne")
                        .HasColumnType("int");

                    b.Property<int>("TipoPlato")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Churrasco");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Productos.Combo", b =>
                {
                    b.HasBaseType("ChurrascosAPI.Models.Base.Producto");

                    b.Property<int?>("CantidadMaximaPedido")
                        .HasColumnType("int");

                    b.Property<int>("CantidadMinimaPedido")
                        .HasColumnType("int");

                    b.Property<string>("CondicionesEspeciales")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("EsTemporada")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaFinVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoDescuento")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PorcentajeDescuento")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("TipoCombo")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Combo");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Productos.DulceTipico", b =>
                {
                    b.HasBaseType("ChurrascosAPI.Models.Base.Producto");

                    b.Property<int>("CantidadEnStock")
                        .HasColumnType("int");

                    b.Property<int?>("CapacidadCaja")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ingredientes")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("ModalidadVenta")
                        .HasColumnType("int");

                    b.Property<decimal?>("PesoGramos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioUnidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Proveedor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TipoDulce")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("DulceTipico");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Inventario.GuarnicionChurrasco", b =>
                {
                    b.HasOne("ChurrascosAPI.Models.Productos.Churrasco", "Churrasco")
                        .WithMany("Guarniciones")
                        .HasForeignKey("ChurrascoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChurrascosAPI.Models.Inventario.Guarnicion", "Guarnicion")
                        .WithMany()
                        .HasForeignKey("GuarnicionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Churrasco");

                    b.Navigation("Guarnicion");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Inventario.MovimientoInventario", b =>
                {
                    b.HasOne("ChurrascosAPI.Models.Inventario.InventarioItem", "InventarioItem")
                        .WithMany("Movimientos")
                        .HasForeignKey("InventarioItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventarioItem");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Ventas.ComboItem", b =>
                {
                    b.HasOne("ChurrascosAPI.Models.Productos.Combo", "Combo")
                        .WithMany("Items")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChurrascosAPI.Models.Base.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Ventas.VentaItem", b =>
                {
                    b.HasOne("ChurrascosAPI.Models.Base.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ChurrascosAPI.Models.Ventas.Venta", "Venta")
                        .WithMany("Items")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Inventario.InventarioItem", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Ventas.Venta", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Productos.Churrasco", b =>
                {
                    b.Navigation("Guarniciones");
                });

            modelBuilder.Entity("ChurrascosAPI.Models.Productos.Combo", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
